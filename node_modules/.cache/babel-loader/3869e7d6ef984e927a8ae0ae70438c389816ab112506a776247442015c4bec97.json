{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport { useStorage } from '@vueuse/core';\nconst studentInformation = {\n  name: '',\n  score: 0,\n  studentId: '0',\n  subject: '0'\n};\nconst storedStudentInformation = useStorage('student-information', studentInformation);\nconst storedTableNameList = useStorage('table-name-list', {});\nconst storedFilters = useStorage('filters', {});\nconst defaultFilters = {\n  selectedBatch: '',\n  selectedSubjectType: '',\n  selectedProvince: [],\n  selectedType: '',\n  selectedMajorType: [],\n  selectedMajorName: '',\n  minScore: null,\n  maxScore: null\n};\nconst store = createStore({\n  state() {\n    return {\n      studentInformation: storedStudentInformation.value,\n      tablenamelist: storedTableNameList.value,\n      filters: storedFilters.value || defaultFilters\n    };\n  },\n  mutations: {\n    setName(state, name) {\n      state.studentInformation.name = name;\n      storedStudentInformation.value = state.studentInformation;\n    },\n    setScore(state, score) {\n      state.studentInformation.score = score;\n      storedStudentInformation.value = state.studentInformation;\n    },\n    setStudentId(state, studentId) {\n      state.studentInformation.studentId = studentId;\n      storedStudentInformation.value = state.studentInformation;\n    },\n    setSubject(state, subject) {\n      state.studentInformation.subject = subject;\n      storedStudentInformation.value = state.studentInformation;\n    },\n    addToArchive(state, {\n      name,\n      record\n    }) {\n      if (!state.tablenamelist[name]) {\n        throw new Error('没有找到当前报考人，请先构建档案');\n      }\n      state.tablenamelist[name].data.push(record);\n      storedTableNameList.value = state.tablenamelist;\n    },\n    addTableName(state, name) {\n      if (!state.tablenamelist[name]) {\n        state.tablenamelist[name] = {\n          data: []\n        };\n        storedTableNameList.value = state.tablenamelist;\n      }\n    },\n    deleteArchive(state, name) {\n      delete state.tablenamelist[name];\n      storedTableNameList.value = state.tablenamelist;\n    },\n    setBatch(state, batch) {\n      state.filters.selectedBatch = batch;\n      state.filters = {\n        ...defaultFilters,\n        selectedBatch: batch\n      };\n      storedFilters.value = state.filters;\n    },\n    setFilters(state, filters) {\n      state.filters = filters;\n      storedFilters.value = state.filters;\n    },\n    resetFilters(state) {\n      state.filters = {\n        ...defaultFilters,\n        selectedBatch: state.filters.selectedBatch\n      };\n      storedFilters.value = state.filters;\n    }\n  },\n  actions: {\n    changeBatch({\n      commit\n    }, batch) {\n      commit('setBatch', batch);\n      commit('resetFilters');\n    },\n    updateFilters({\n      commit\n    }, filters) {\n      commit('setFilters', filters);\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","useStorage","studentInformation","name","score","studentId","subject","storedStudentInformation","storedTableNameList","storedFilters","defaultFilters","selectedBatch","selectedSubjectType","selectedProvince","selectedType","selectedMajorType","selectedMajorName","minScore","maxScore","store","state","value","tablenamelist","filters","mutations","setName","setScore","setStudentId","setSubject","addToArchive","record","Error","data","push","addTableName","deleteArchive","setBatch","batch","setFilters","resetFilters","actions","changeBatch","commit","updateFilters"],"sources":["/Users/jiangxingnan/Desktop/gao_kao_system/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport { useStorage } from '@vueuse/core';\n\nconst studentInformation = {\n  name: '',\n  score: 0,\n  studentId: '0',\n  subject: '0'\n};\n\nconst storedStudentInformation = useStorage('student-information', studentInformation);\nconst storedTableNameList = useStorage('table-name-list', {});\nconst storedFilters = useStorage('filters', {});\n\nconst defaultFilters = {\n  selectedBatch: '',\n  selectedSubjectType: '',\n  selectedProvince: [],\n  selectedType: '',\n  selectedMajorType: [],\n  selectedMajorName: '',\n  minScore: null,\n  maxScore: null\n};\n\nconst store = createStore({\n  state() {\n    return {\n      studentInformation: storedStudentInformation.value,\n      tablenamelist: storedTableNameList.value,\n      filters: storedFilters.value || defaultFilters\n    };\n  },\n  mutations: {\n    setName(state, name) {\n      state.studentInformation.name = name;\n      storedStudentInformation.value = state.studentInformation;\n    },\n    setScore(state, score) {\n      state.studentInformation.score = score;\n      storedStudentInformation.value = state.studentInformation;\n    },\n    setStudentId(state, studentId) {\n      state.studentInformation.studentId = studentId;\n      storedStudentInformation.value = state.studentInformation;\n    },\n    setSubject(state, subject) {\n      state.studentInformation.subject = subject;\n      storedStudentInformation.value = state.studentInformation;\n    },\n    addToArchive(state, { name, record }) {\n      if (!state.tablenamelist[name]) {\n        throw new Error('没有找到当前报考人，请先构建档案');\n      }\n      state.tablenamelist[name].data.push(record);\n      storedTableNameList.value = state.tablenamelist;\n    },\n    addTableName(state, name) {\n      if (!state.tablenamelist[name]) {\n        state.tablenamelist[name] = { data: [] };\n        storedTableNameList.value = state.tablenamelist;\n      }\n    },\n    deleteArchive(state, name) {\n      delete state.tablenamelist[name];\n      storedTableNameList.value = state.tablenamelist;\n    },\n    setBatch(state, batch) {\n      state.filters.selectedBatch = batch;\n      state.filters = { ...defaultFilters, selectedBatch: batch };\n      storedFilters.value = state.filters;\n    },\n    setFilters(state, filters) {\n      state.filters = filters;\n      storedFilters.value = state.filters;\n    },\n    resetFilters(state) {\n      state.filters = { ...defaultFilters, selectedBatch: state.filters.selectedBatch };\n      storedFilters.value = state.filters;\n    }\n  },\n  actions: {\n    changeBatch({ commit }, batch) {\n      commit('setBatch', batch);\n      commit('resetFilters');\n    },\n    updateFilters({ commit }, filters) {\n      commit('setFilters', filters);\n    }\n  }\n});\n\nexport default store;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}