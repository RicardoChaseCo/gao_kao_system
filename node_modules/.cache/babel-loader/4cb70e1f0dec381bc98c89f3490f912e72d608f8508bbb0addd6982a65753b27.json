{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// store/index.js\n\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    name: localStorage.getItem('name') || '',\n    score: localStorage.getItem('score') || '',\n    archivesList: JSON.parse(localStorage.getItem('archivesList')) || []\n  },\n  mutations: {\n    setName(state, name) {\n      state.name = name;\n      localStorage.setItem('name', name);\n    },\n    setScore(state, score) {\n      state.score = score;\n      localStorage.setItem('score', score);\n    },\n    createArchive(state) {\n      const newArchive = {\n        name: state.name,\n        score: state.score,\n        id: Date.now(),\n        data: []\n      };\n      state.archivesList.push(newArchive);\n      localStorage.setItem('archivesList', JSON.stringify(state.archivesList));\n    },\n    addDataToArchive(state, {\n      id,\n      data\n    }) {\n      const archive = state.archivesList.find(archive => archive.id === id);\n      if (archive) {\n        archive.data.push(data);\n        localStorage.setItem('archivesList', JSON.stringify(state.archivesList));\n      }\n    },\n    deleteArchive(state, index) {\n      state.archivesList.splice(index, 1);\n      localStorage.setItem('archivesList', JSON.stringify(state.archivesList));\n    }\n  },\n  actions: {\n    setName({\n      commit\n    }, name) {\n      commit('setName', name);\n    },\n    setScore({\n      commit\n    }, score) {\n      commit('setScore', score);\n    },\n    createArchive({\n      commit\n    }) {\n      commit('createArchive');\n    },\n    addDataToArchive({\n      commit\n    }, payload) {\n      commit('addDataToArchive', payload);\n    },\n    deleteArchive({\n      commit\n    }, index) {\n      commit('deleteArchive', index);\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","name","localStorage","getItem","score","archivesList","JSON","parse","mutations","setName","setItem","setScore","createArchive","newArchive","id","Date","now","data","push","stringify","addDataToArchive","archive","find","deleteArchive","index","splice","actions","commit","payload"],"sources":["/Users/jiangxingnandecomputer/Desktop/sss/gao_kao_system/src/store/index.js"],"sourcesContent":["// store/index.js\n\nimport { createStore } from 'vuex';\n\nexport default createStore({\n  state: {\n    name: localStorage.getItem('name') || '',\n    score: localStorage.getItem('score') || '',\n    archivesList: JSON.parse(localStorage.getItem('archivesList')) || [],\n  },\n  mutations: {\n    setName(state, name) {\n      state.name = name;\n      localStorage.setItem('name', name);\n    },\n    setScore(state, score) {\n      state.score = score;\n      localStorage.setItem('score', score);\n    },\n    createArchive(state) {\n      const newArchive = {\n        name: state.name,\n        score: state.score,\n        id: Date.now(),\n        data: [],\n      };\n      state.archivesList.push(newArchive);\n      localStorage.setItem('archivesList', JSON.stringify(state.archivesList));\n    },\n    addDataToArchive(state, { id, data }) {\n      const archive = state.archivesList.find(archive => archive.id === id);\n      if (archive) {\n        archive.data.push(data);\n        localStorage.setItem('archivesList', JSON.stringify(state.archivesList));\n      }\n    },\n    deleteArchive(state, index) {\n      state.archivesList.splice(index, 1);\n      localStorage.setItem('archivesList', JSON.stringify(state.archivesList));\n    },\n  },\n  actions: {\n    setName({ commit }, name) {\n      commit('setName', name);\n    },\n    setScore({ commit }, score) {\n      commit('setScore', score);\n    },\n    createArchive({ commit }) {\n      commit('createArchive');\n    },\n    addDataToArchive({ commit }, payload) {\n      commit('addDataToArchive', payload);\n    },\n    deleteArchive({ commit }, index) {\n      commit('deleteArchive', index);\n    },\n  },\n});\n"],"mappings":";AAAA;;AAEA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;IACxCC,KAAK,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IAC1CE,YAAY,EAAEC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI;EACpE,CAAC;EACDK,SAAS,EAAE;IACTC,OAAOA,CAACT,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;MACjBC,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAET,IAAI,CAAC;IACpC,CAAC;IACDU,QAAQA,CAACX,KAAK,EAAEI,KAAK,EAAE;MACrBJ,KAAK,CAACI,KAAK,GAAGA,KAAK;MACnBF,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;IACtC,CAAC;IACDQ,aAAaA,CAACZ,KAAK,EAAE;MACnB,MAAMa,UAAU,GAAG;QACjBZ,IAAI,EAAED,KAAK,CAACC,IAAI;QAChBG,KAAK,EAAEJ,KAAK,CAACI,KAAK;QAClBU,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAE;MACR,CAAC;MACDjB,KAAK,CAACK,YAAY,CAACa,IAAI,CAACL,UAAU,CAAC;MACnCX,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEJ,IAAI,CAACa,SAAS,CAACnB,KAAK,CAACK,YAAY,CAAC,CAAC;IAC1E,CAAC;IACDe,gBAAgBA,CAACpB,KAAK,EAAE;MAAEc,EAAE;MAAEG;IAAK,CAAC,EAAE;MACpC,MAAMI,OAAO,GAAGrB,KAAK,CAACK,YAAY,CAACiB,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACP,EAAE,KAAKA,EAAE,CAAC;MACrE,IAAIO,OAAO,EAAE;QACXA,OAAO,CAACJ,IAAI,CAACC,IAAI,CAACD,IAAI,CAAC;QACvBf,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEJ,IAAI,CAACa,SAAS,CAACnB,KAAK,CAACK,YAAY,CAAC,CAAC;MAC1E;IACF,CAAC;IACDkB,aAAaA,CAACvB,KAAK,EAAEwB,KAAK,EAAE;MAC1BxB,KAAK,CAACK,YAAY,CAACoB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MACnCtB,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEJ,IAAI,CAACa,SAAS,CAACnB,KAAK,CAACK,YAAY,CAAC,CAAC;IAC1E;EACF,CAAC;EACDqB,OAAO,EAAE;IACPjB,OAAOA,CAAC;MAAEkB;IAAO,CAAC,EAAE1B,IAAI,EAAE;MACxB0B,MAAM,CAAC,SAAS,EAAE1B,IAAI,CAAC;IACzB,CAAC;IACDU,QAAQA,CAAC;MAAEgB;IAAO,CAAC,EAAEvB,KAAK,EAAE;MAC1BuB,MAAM,CAAC,UAAU,EAAEvB,KAAK,CAAC;IAC3B,CAAC;IACDQ,aAAaA,CAAC;MAAEe;IAAO,CAAC,EAAE;MACxBA,MAAM,CAAC,eAAe,CAAC;IACzB,CAAC;IACDP,gBAAgBA,CAAC;MAAEO;IAAO,CAAC,EAAEC,OAAO,EAAE;MACpCD,MAAM,CAAC,kBAAkB,EAAEC,OAAO,CAAC;IACrC,CAAC;IACDL,aAAaA,CAAC;MAAEI;IAAO,CAAC,EAAEH,KAAK,EAAE;MAC/BG,MAAM,CAAC,eAAe,EAAEH,KAAK,CAAC;IAChC;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}