{"ast":null,"code":"import BaseComponent from '@primevue/core/basecomponent';\nimport AvatarStyle from 'primevue/avatar/style';\nimport { openBlock, createElementBlock, mergeProps, renderSlot, toDisplayString, createBlock, resolveDynamicComponent, normalizeClass, createCommentVNode } from 'vue';\nvar script$1 = {\n  name: 'BaseAvatar',\n  \"extends\": BaseComponent,\n  props: {\n    label: {\n      type: String,\n      \"default\": null\n    },\n    icon: {\n      type: String,\n      \"default\": null\n    },\n    image: {\n      type: String,\n      \"default\": null\n    },\n    size: {\n      type: String,\n      \"default\": 'normal'\n    },\n    shape: {\n      type: String,\n      \"default\": 'square'\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: AvatarStyle,\n  provide: function provide() {\n    return {\n      $pcAvatar: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script = {\n  name: 'Avatar',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['error'],\n  methods: {\n    onError: function onError(event) {\n      this.$emit('error', event);\n    }\n  }\n};\nvar _hoisted_1 = [\"aria-labelledby\", \"aria-label\"];\nvar _hoisted_2 = [\"src\", \"alt\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    \"aria-label\": _ctx.ariaLabel\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [_ctx.label ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 0,\n      \"class\": _ctx.cx('label')\n    }, _ctx.ptm('label')), toDisplayString(_ctx.label), 17)) : _ctx.$slots.icon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.icon), {\n      key: 1,\n      \"class\": normalizeClass(_ctx.cx('icon'))\n    }, null, 8, [\"class\"])) : _ctx.icon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 2,\n      \"class\": [_ctx.cx('icon'), _ctx.icon]\n    }, _ctx.ptm('icon')), null, 16)) : _ctx.image ? (openBlock(), createElementBlock(\"img\", mergeProps({\n      key: 3,\n      src: _ctx.image,\n      alt: _ctx.ariaLabel,\n      onError: _cache[0] || (_cache[0] = function () {\n        return $options.onError && $options.onError.apply($options, arguments);\n      })\n    }, _ctx.ptm('image')), null, 16, _hoisted_2)) : createCommentVNode(\"\", true)];\n  })], 16, _hoisted_1);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","label","type","String","icon","image","size","shape","ariaLabelledby","ariaLabel","style","AvatarStyle","provide","$pcAvatar","$parentInstance","script","inheritAttrs","emits","methods","onError","event","$emit","openBlock","createElementBlock","mergeProps","_ctx","cx","ptmi","renderSlot","$slots","ptm","toDisplayString","createBlock","resolveDynamicComponent","normalizeClass","src","alt","_cache","$options","apply","arguments","_hoisted_2","createCommentVNode"],"sources":["../../src/avatar/BaseAvatar.vue","../../src/avatar/Avatar.vue","../../src/avatar/Avatar.vue?vue&type=template&id=1236585f&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AvatarStyle from 'primevue/avatar/style';\n\nexport default {\n    name: 'BaseAvatar',\n    extends: BaseComponent,\n    props: {\n        label: {\n            type: String,\n            default: null\n        },\n        icon: {\n            type: String,\n            default: null\n        },\n        image: {\n            type: String,\n            default: null\n        },\n        size: {\n            type: String,\n            default: 'normal'\n        },\n        shape: {\n            type: String,\n            default: 'square'\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: AvatarStyle,\n    provide() {\n        return {\n            $pcAvatar: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" :aria-labelledby=\"ariaLabelledby\" :aria-label=\"ariaLabel\" v-bind=\"ptmi('root')\">\n        <slot>\n            <span v-if=\"label\" :class=\"cx('label')\" v-bind=\"ptm('label')\">{{ label }}</span>\n            <component v-else-if=\"$slots.icon\" :is=\"$slots.icon\" :class=\"cx('icon')\" />\n            <span v-else-if=\"icon\" :class=\"[cx('icon'), icon]\" v-bind=\"ptm('icon')\" />\n            <img v-else-if=\"image\" :src=\"image\" :alt=\"ariaLabel\" @error=\"onError\" v-bind=\"ptm('image')\" />\n        </slot>\n    </div>\n</template>\n\n<script>\nimport BaseAvatar from './BaseAvatar.vue';\n\nexport default {\n    name: 'Avatar',\n    extends: BaseAvatar,\n    inheritAttrs: false,\n    emits: ['error'],\n    methods: {\n        onError(event) {\n            this.$emit('error', event);\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" :aria-labelledby=\"ariaLabelledby\" :aria-label=\"ariaLabel\" v-bind=\"ptmi('root')\">\n        <slot>\n            <span v-if=\"label\" :class=\"cx('label')\" v-bind=\"ptm('label')\">{{ label }}</span>\n            <component v-else-if=\"$slots.icon\" :is=\"$slots.icon\" :class=\"cx('icon')\" />\n            <span v-else-if=\"icon\" :class=\"[cx('icon'), icon]\" v-bind=\"ptm('icon')\" />\n            <img v-else-if=\"image\" :src=\"image\" :alt=\"ariaLabel\" @error=\"onError\" v-bind=\"ptm('image')\" />\n        </slot>\n    </div>\n</template>\n\n<script>\nimport BaseAvatar from './BaseAvatar.vue';\n\nexport default {\n    name: 'Avatar',\n    extends: BaseAvatar,\n    inheritAttrs: false,\n    emits: ['error'],\n    methods: {\n        onError(event) {\n            this.$emit('error', event);\n        }\n    }\n};\n</script>\n"],"mappings":";;;AAIA,IAAAA,QAAA,GAAe;EACXC,IAAI,EAAE,YAAY;EAClB,WAASC,aAAa;EACtBC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDC,IAAI,EAAE;MACFF,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDE,KAAK,EAAE;MACHH,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDG,IAAI,EAAE;MACFJ,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDI,KAAK,EAAE;MACHL,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDK,cAAc,EAAE;MACZN,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDM,SAAS,EAAE;MACPP,IAAI,EAAEC,MAAM;MACZ,SAAS;IACb;GACH;EACDO,KAAK,EAAEC,WAAW;EAClBC,OAAO,WAAAA,QAAA,EAAG;IACN,OAAO;MACHC,SAAS,EAAE,IAAI;MACfC,eAAe,EAAE;KACpB;EACL;AACJ,CAAC;AC9BD,IAAAC,MAAA,GAAe;EACXjB,IAAI,EAAE,QAAQ;EACd,WAASD,QAAU;EACnBmB,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE,CAAC,OAAO,CAAC;EAChBC,OAAO,EAAE;IACLC,OAAO,WAAAA,OAACA,CAAAC,KAAK,EAAE;MACX,IAAI,CAACC,KAAK,CAAC,OAAO,EAAED,KAAK,CAAC;IAC9B;EACJ;AACJ,CAAC;;;;ECvBG,OAAAE,SAAA,IAAAC,kBAAA,CAOK,OAPLC,UAOK;IAPC,SAAOC,IAAE,CAAAC,EAAA;IAAW,iBAAe,EAAED,IAAc,CAAAjB,cAAA;IAAG,YAAU,EAAEiB,IAAS,CAAAhB;KAAUgB,IAAI,CAAAE,IAAA,YAC3FC,UAAA,CAKMH,IAAA,CAAAI,MAAA,iBALN;IAAA,OAKM,CAJUJ,IAAK,CAAAxB,KAAA,IAAjBqB,SAAA,IAAAC,kBAAA,CAA+E,QAA/EC,UAA+E;;MAA3D,SAAOC,IAAE,CAAAC,EAAA;IAAmB,GAAAD,IAAA,CAAAK,GAAG,YAAAC,eAAA,CAAcN,IAAM,CAAAxB,KAAA,UACjDwB,IAAA,CAAAI,MAAM,CAACzB,IAAI,IAAAkB,SAAA,IAAjCU,WAA0E,CAAAC,uBAAA,CAAlCR,IAAM,CAAAI,MAAA,CAACzB,IAAI;;MAAG,SAAA8B,cAAA,CAAOT,IAAE,CAAAC,EAAA;8BAC9CD,IAAI,CAAArB,IAAA,IAArBkB,SAAA,IAAAC,kBAAA,CAAyE,QAAzEC,UAAyE;;MAAjD,OAAK,GAAGC,IAAE,CAAAC,EAAA,UAAUD,IAAI,CAAArB,IAAA;OAAWqB,IAAG,CAAAK,GAAA,wBAC9CL,IAAK,CAAApB,KAAA,IAArBiB,SAAA,IAAAC,kBAAA,CAA6F,OAA7FC,UAA6F;;MAArEW,GAAG,EAAEV,IAAK,CAAApB,KAAA;MAAG+B,GAAG,EAAEX,IAAS,CAAAhB,SAAA;MAAGU,OAAK,EAAAkB,MAAA,QAAAA,MAAA;eAAEC,QAAO,CAAAnB,OAAA,IAAAmB,QAAA,CAAAnB,OAAA,CAAAoB,KAAA,CAAAD,QAAA,EAAAE,SAAA;OAAA;OAAUf,IAAG,CAAAK,GAAA,sBAAAW,UAAA,KAAAC,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}