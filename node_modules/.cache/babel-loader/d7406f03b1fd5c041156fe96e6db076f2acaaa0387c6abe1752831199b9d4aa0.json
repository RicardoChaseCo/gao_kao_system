{"ast":null,"code":"import { ref } from 'vue';\nimport { SmileOutlined } from '@ant-design/icons-vue';\nexport default {\n  name: 'DataTable',\n  components: {\n    SmileOutlined\n  },\n  setup() {\n    const selectedBatch = ref('');\n    const selectedSubjectType = ref('');\n    const selectedProvince = ref('');\n    const selectedType = ref('');\n    const selectedMajorType = ref('');\n    const selectedMajorName = ref('');\n    const minScore = ref(null);\n    const maxScore = ref(null);\n    const filteredData = ref([]);\n    const updateBatch = value => {\n      selectedBatch.value = value;\n      loadData();\n    };\n    const updateSubjectType = value => {\n      selectedSubjectType.value = value;\n      filterData();\n    };\n    const updateProvince = value => {\n      selectedProvince.value = value;\n      filterData();\n    };\n    const updateType = value => {\n      selectedType.value = value;\n      filterData();\n    };\n    const updateMajorType = value => {\n      selectedMajorType.value = value;\n      filterData();\n    };\n    const updateMajorName = value => {\n      selectedMajorName.value = value;\n      filterData();\n    };\n    const updateMinScore = value => {\n      minScore.value = value;\n      filterData();\n    };\n    const updateMaxScore = value => {\n      maxScore.value = value;\n      filterData();\n    };\n    const handleFilter = () => {\n      filterData();\n    };\n    const loadData = () => {\n      // Determine the file name based on batch and current URL\n      const url = window.location.href;\n      let category = '';\n      if (url.includes('history')) {\n        category = '历史类';\n      } else if (url.includes('physics')) {\n        category = '物理类';\n      }\n      const fileName = `${category}${selectedBatch.value}.json`;\n      // Load the JSON file\n      import(`src/data/${fileName}`).then(data => {\n        filteredData.value = data.default;\n        filterData();\n      });\n    };\n    const filterData = () => {\n      filteredData.value = filteredData.value.filter(item => {\n        return (selectedSubjectType.value === '' || item['再选'] === selectedSubjectType.value) && (selectedProvince.value === '' || item['省市自治区'] === selectedProvince.value) && (selectedType.value === '' || item['办学性质备注'] === selectedType.value) && (selectedMajorType.value === '' || item['专业类'] === selectedMajorType.value) && (selectedMajorName.value === '' || item['专业名称'] === selectedMajorName.value) && (minScore.value === null || item['2023年投档线'] >= minScore.value) && (maxScore.value === null || item['2023年投档线'] <= maxScore.value);\n      });\n    };\n    return {\n      selectedBatch,\n      selectedSubjectType,\n      selectedProvince,\n      selectedType,\n      selectedMajorType,\n      selectedMajorName,\n      minScore,\n      maxScore,\n      filteredData,\n      updateBatch,\n      updateSubjectType,\n      updateProvince,\n      updateType,\n      updateMajorType,\n      updateMajorName,\n      updateMinScore,\n      updateMaxScore,\n      handleFilter\n    };\n  },\n  data() {\n    return {\n      columns: [{\n        title: '院校名称',\n        dataIndex: 'schoolName',\n        key: 'schoolName'\n      }, {\n        title: '专业名称',\n        dataIndex: 'majorName',\n        key: 'majorName'\n      }, {\n        title: '省份',\n        dataIndex: 'province',\n        key: 'province'\n      }, {\n        title: '分数',\n        dataIndex: 'score',\n        key: 'score'\n      }, {\n        title: '公办民办',\n        dataIndex: 'type',\n        key: 'type'\n      }, {\n        title: '专业类',\n        dataIndex: 'majorType',\n        key: 'majorType'\n      }]\n    };\n  }\n};","map":{"version":3,"names":["ref","SmileOutlined","name","components","setup","selectedBatch","selectedSubjectType","selectedProvince","selectedType","selectedMajorType","selectedMajorName","minScore","maxScore","filteredData","updateBatch","value","loadData","updateSubjectType","filterData","updateProvince","updateType","updateMajorType","updateMajorName","updateMinScore","updateMaxScore","handleFilter","url","window","location","href","category","includes","fileName","then","data","default","filter","item","columns","title","dataIndex","key"],"sources":["/Users/jiangxingnandecomputer/Desktop/gao_kao_system/src/components/DataTable.vue"],"sourcesContent":["<template>\n    <div>\n      <a-form layout=\"inline\" @submit.prevent=\"handleFilter\">\n        <a-form-item label=\"批次\">\n          <a-select placeholder=\"选择批次\" style=\"width: 200px\" @change=\"updateBatch\">\n            <a-select-option value=\"提前批本科\">提前批本科</a-select-option>\n            <a-select-option value=\"普通批本科\">普通批本科</a-select-option>\n            <a-select-option value=\"提前批专科\">提前批专科</a-select-option>\n            <a-select-option value=\"普通批专科\">普通批专科</a-select-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item label=\"再选\">\n          <a-select placeholder=\"选择再选\" style=\"width: 200px\" @change=\"updateSubjectType\">\n            <a-select-option value=\"化学\">化学</a-select-option>\n            <a-select-option value=\"不限\">不限</a-select-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item label=\"省份\">\n          <a-select placeholder=\"选择省份\" style=\"width: 200px\" @change=\"updateProvince\">\n            <!-- Add options for provinces dynamically based on data -->\n          </a-select>\n        </a-form-item>\n        <a-form-item label=\"公办民办\">\n          <a-select placeholder=\"选择公办民办\" style=\"width: 200px\" @change=\"updateType\">\n            <a-select-option value=\"公办\">公办</a-select-option>\n            <a-select-option value=\"民办\">民办</a-select-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item label=\"专业类\">\n          <a-select placeholder=\"选择专业类\" style=\"width: 200px\" @change=\"updateMajorType\">\n            <!-- Add options for major types dynamically based on data -->\n          </a-select>\n        </a-form-item>\n        <a-form-item label=\"专业名称\">\n          <a-select placeholder=\"选择专业名称\" style=\"width: 200px\" @change=\"updateMajorName\">\n            <!-- Add options for major names dynamically based on data -->\n          </a-select>\n        </a-form-item>\n        <a-form-item label=\"分数区间\">\n          <a-input-number placeholder=\"最低分\" style=\"width: 100px\" @change=\"updateMinScore\" />\n          -\n          <a-input-number placeholder=\"最高分\" style=\"width: 100px\" @change=\"updateMaxScore\" />\n        </a-form-item>\n        <a-form-item>\n          <a-button type=\"primary\" @click=\"handleFilter\">筛选</a-button>\n        </a-form-item>\n      </a-form>\n  \n      <a-table :columns=\"columns\" :dataSource=\"filteredData\">\n        <template #headerCell=\"{ column }\">\n          <template v-if=\"column.key === 'schoolName'\">\n            <span>\n              <SmileOutlined />\n              院校名称\n            </span>\n          </template>\n        </template>\n  \n        <template #bodyCell=\"{ column, record }\">\n          <template v-if=\"column.key === 'schoolName'\">\n            <a>{{ record['院校名称'] }}</a>\n          </template>\n          <template v-else-if=\"column.key === 'majorName'\">\n            <span>{{ record['专业名称'] }}</span>\n          </template>\n          <template v-else-if=\"column.key === 'province'\">\n            <span>{{ record['省市自治区'] }}</span>\n          </template>\n          <template v-else-if=\"column.key === 'score'\">\n            <span>{{ record['2023年投档线'] }}</span>\n          </template>\n          <template v-else-if=\"column.key === 'type'\">\n            <span>{{ record['办学性质备注'] }}</span>\n          </template>\n          <template v-else-if=\"column.key === 'majorType'\">\n            <span>{{ record['专业类'] }}</span>\n          </template>\n        </template>\n      </a-table>\n    </div>\n  </template>\n  \n  <script>\n  import { ref } from 'vue';\n  import { SmileOutlined } from '@ant-design/icons-vue';\n  \n  export default {\n    name: 'DataTable',\n    components: {\n      SmileOutlined,\n    },\n    setup() {\n      const selectedBatch = ref('');\n      const selectedSubjectType = ref('');\n      const selectedProvince = ref('');\n      const selectedType = ref('');\n      const selectedMajorType = ref('');\n      const selectedMajorName = ref('');\n      const minScore = ref(null);\n      const maxScore = ref(null);\n  \n      const filteredData = ref([]);\n  \n      const updateBatch = (value) => {\n        selectedBatch.value = value;\n        loadData();\n      };\n  \n      const updateSubjectType = (value) => {\n        selectedSubjectType.value = value;\n        filterData();\n      };\n  \n      const updateProvince = (value) => {\n        selectedProvince.value = value;\n        filterData();\n      };\n  \n      const updateType = (value) => {\n        selectedType.value = value;\n        filterData();\n      };\n  \n      const updateMajorType = (value) => {\n        selectedMajorType.value = value;\n        filterData();\n      };\n  \n      const updateMajorName = (value) => {\n        selectedMajorName.value = value;\n        filterData();\n      };\n  \n      const updateMinScore = (value) => {\n        minScore.value = value;\n        filterData();\n      };\n  \n      const updateMaxScore = (value) => {\n        maxScore.value = value;\n        filterData();\n      };\n  \n      const handleFilter = () => {\n        filterData();\n      };\n  \n      const loadData = () => {\n        // Determine the file name based on batch and current URL\n        const url = window.location.href;\n        let category = '';\n        if (url.includes('history')) {\n          category = '历史类';\n        } else if (url.includes('physics')) {\n          category = '物理类';\n        }\n        const fileName = `${category}${selectedBatch.value}.json`;\n        // Load the JSON file\n        import(`src/data/${fileName}`).then((data) => {\n          filteredData.value = data.default;\n          filterData();\n        });\n      };\n  \n      const filterData = () => {\n        filteredData.value = filteredData.value.filter((item) => {\n          return (\n            (selectedSubjectType.value === '' || item['再选'] === selectedSubjectType.value) &&\n            (selectedProvince.value === '' || item['省市自治区'] === selectedProvince.value) &&\n            (selectedType.value === '' || item['办学性质备注'] === selectedType.value) &&\n            (selectedMajorType.value === '' || item['专业类'] === selectedMajorType.value) &&\n            (selectedMajorName.value === '' || item['专业名称'] === selectedMajorName.value) &&\n            (minScore.value === null || item['2023年投档线'] >= minScore.value) &&\n            (maxScore.value === null || item['2023年投档线'] <= maxScore.value)\n          );\n        });\n      };\n  \n      return {\n        selectedBatch,\n        selectedSubjectType,\n        selectedProvince,\n        selectedType,\n        selectedMajorType,\n        selectedMajorName,\n        minScore,\n        maxScore,\n        filteredData,\n        updateBatch,\n        updateSubjectType,\n        updateProvince,\n        updateType,\n        updateMajorType,\n        updateMajorName,\n        updateMinScore,\n        updateMaxScore,\n        handleFilter,\n      };\n    },\n    data() {\n      return {\n        columns: [\n          {\n            title: '院校名称',\n            dataIndex: 'schoolName',\n            key: 'schoolName',\n          },\n          {\n            title: '专业名称',\n            dataIndex: 'majorName',\n            key: 'majorName',\n          },\n          {\n            title: '省份',\n            dataIndex: 'province',\n            key: 'province',\n          },\n          {\n            title: '分数',\n            dataIndex: 'score',\n            key: 'score',\n          },\n          {\n            title: '公办民办',\n            dataIndex: 'type',\n            key: 'type',\n          },\n          {\n            title: '专业类',\n            dataIndex: 'majorType',\n            key: 'majorType',\n          },\n        ],\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Add your styles here */\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}